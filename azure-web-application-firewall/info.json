{
  "name": "azure-web-application-firewall",
  "label": "Azure Web Application Firewall",
  "version": "1.0.0",
  "description": "The Azure WAF (Web Application Firewall) integration provides centralized protection of your web applications from common exploits and vulnerabilities. It enables you to control policies that are configured in the Azure Firewall management platform, and allows you to add, delete, or update policies, and also to get details of a specific policy or a list of policies.",
  "publisher": "Fortinet",
  "cs_approved": false,
  "cs_compatible": true,
  "category": "Firewall and Network Protection",
  "icon_small_name": "small.png",
  "icon_large_name": "large.png",
  "help_online": "",
  "configuration": {
    "fields": [
      {
        "title": "Get Access Token",
        "required": true,
        "editable": true,
        "visible": true,
        "type": "select",
        "options": [
          "On behalf of User - Delegate Permissions",
          "Without a User - Application Permissions"
        ],
        "name": "auth_type",
        "value": "Without a User - Application Permissions",
        "description": "Select the method using which you will get access tokens used to access the Azure WAF APIs.",
        "onchange": {
          "Without a User - Application Permissions": [
            {
              "title": "Server URL",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "text",
              "name": "resource",
              "value": "https://management.azure.com",
              "description": "The service-based URI to connect and perform the automated operations. "
            },
            {
              "title": "Client ID",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "text",
              "name": "client_id",
              "description": "Unique API ID of the Azure AD application that is used to create an authentication token required to access the API. "
            },
            {
              "title": "Client Secret",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "password",
              "name": "client_secret",
              "description": "Unique API Secret of the Azure AD application that is used to create an authentication token required to access the API. "
            },
            {
              "title": "Tenant ID",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "text",
              "name": "tenant_id",
              "description": "ID of the tenant that you have been provided for your Azure Active Directory instance."
            },
            {
              "title": "Resource Group Name",
              "name": "resource_group_name",
              "type": "text",
              "tooltip": "Name of the resource group that holds resources on the Azure Portal. ",
              "description": "Name of the resource group that holds resources on the Azure Portal. ",
              "required": true,
              "editable": true,
              "visible": true
            },
            {
              "title": "Subscription ID",
              "name": "subscription_id",
              "type": "text",
              "tooltip": "Subscription credentials that uniquely identify the Microsoft Azure subscription. ",
              "description": "Subscription credentials that uniquely identify the Microsoft Azure subscription. ",
              "required": true,
              "editable": true,
              "visible": true
            },
            {
              "title": "API Version",
              "name": "api_version",
              "type": "text",
              "tooltip": "Specify the API version to use for all automated operations using this connector. ",
              "description": "Specify the API version to use for all automated operations using this connector. ",
              "required": true,
              "editable": true,
              "visible": true
            },
            {
              "title": "Verify SSL",
              "required": false,
              "editable": true,
              "visible": true,
              "type": "checkbox",
              "name": "verify_ssl",
              "value": true,
              "description": "Specifies whether the SSL certificate for the server is to be verified or not. By default, this option is set as True."
            }
          ],
          "On behalf of User - Delegate Permissions": [
            {
              "title": "Server URL",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "text",
              "name": "resource",
              "value": "https://management.azure.com",
              "description": "The service-based URI to connect and perform the automated operations. "
            },
            {
              "title": "Client ID",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "text",
              "name": "client_id",
              "description": "Unique API ID of the Azure AD application that is used to create an authentication token required to access the API. "
            },
            {
              "title": "Client Secret",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "password",
              "name": "client_secret",
              "description": "Unique API Secret of the Azure AD application that is used to create an authentication token required to access the API. "
            },
            {
              "title": "Tenant ID",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "text",
              "name": "tenant_id",
              "description": "ID of the tenant that you have been provided for your Azure Active Directory instance."
            },
            {
              "title": "Auth Code",
              "required": true,
              "editable": true,
              "visible": true,
              "type": "password",
              "name": "code",
              "tooltip": "The authorization code that you acquired during the authorization step.",
              "description": "The authorization code that you acquired during the authorization step."
            },
            {
              "title": "Resource Group Name",
              "name": "resource_group_name",
              "type": "text",
              "tooltip": "Name of the resource group that holds resources on the Azure Portal. ",
              "description": "Name of the resource group that holds resources on the Azure Portal. ",
              "required": true,
              "editable": true,
              "visible": true
            },
            {
              "title": "Subscription ID",
              "name": "subscription_id",
              "type": "text",
              "tooltip": "Subscription credentials that uniquely identify the Microsoft Azure subscription. ",
              "description": "Subscription credentials that uniquely identify the Microsoft Azure subscription. ",
              "required": true,
              "editable": true,
              "visible": true
            },
            {
              "title": "API Version",
              "name": "api_version",
              "type": "text",
              "tooltip": "Specify the API version to use for all automated operations using this connector. ",
              "description": "Specify the API version to use for all automated operations using this connector. ",
              "required": true,
              "editable": true,
              "visible": true
            },
            {
              "title": "Redirect URL",
              "required": false,
              "editable": true,
              "visible": true,
              "type": "text",
              "name": "redirect_url",
              "description": "The redirect_uri of your app, where authentication responses can be sent and received by your app. It must exactly match one of the redirect_uri you registered in the app registration portal."
            },
            {
              "title": "Verify SSL",
              "required": false,
              "editable": true,
              "visible": true,
              "type": "checkbox",
              "name": "verify_ssl",
              "value": true,
              "description": "Specifies whether the SSL certificate for the server is to be verified or not. By default, this option is set as True."
            }
          ]
        }
      }
    ]
  },
  "operations": [
    {
      "operation": "create_or_update_policies",
      "title": "Create Or Update Policies",
      "annotation": "create_or_update_policies",
      "description": "Creates or update policy with specified rule set name within a resource group.",
      "category": "investigation",
      "is_config_required": true,
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "policy_name",
          "title": "Policy Name",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the Name of the Policy you want to create.",
          "description": "Specify the Name of the Policy you want to create."
        },
        {
          "name": "id",
          "title": "Resource ID",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": false,
          "tooltip": "Specify the Resource ID",
          "description": "Specify the Resource ID"
        },
        {
          "name": "location",
          "title": "Resource Location",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": false,
          "tooltip": "Specify the Resource Location. Ex- WestUs",
          "description": "Specify the Resource Location. Ex- WestUs"
        },
        {
          "name": "tags",
          "title": "Tags",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": false,
          "tooltip": "Specify the Resource tags.",
          "description": "Specify the Resource tags."
        },
        {
          "name": "managedRules",
          "title": "Managed Rules",
          "type": "json",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the Managed Rules definition that you want to create within the Resource Group. Ex-\n{\n  \"managedRules\": {\n    \"exclusions\": [],\n    \"managedRuleSets\": [\n      {\n        \"ruleGroupOverrides\": [],\n        \"ruleSetType\": \"OWASP\",\n        \"ruleSetVersion\": \"3.0\"\n      }\n    ]\n  }\n}",
          "description": "Specify the Managed Rules definition that you want to create within the Resource Group."
        },
        {
          "name": "customRules",
          "title": "Custom Rules",
          "type": "json",
          "editable": true,
          "visible": true,
          "required": false,
          "tooltip": "Specify the custom rules inside the Policy. Ex \n{\n  \"customRules\": [\n    {\n      \"name\": \"\",\n      \"priority\": \"\",\n      \"ruleType\": \"\",\n      \"action\": \"\",\n      \"matchConditions\": [\n        {\n          \"matchVariables\": [\n            {\n              \"variableName\": \"\",\n              \"selector\": \"\"\n            }\n          ],\n          \"operator\": \"\",\n          \"matchValues\": []\n        }\n      ]\n    }\n  ]\n}",
          "description": "Specify the custom rules inside the Policy."
        },
        {
          "name": "policySettings",
          "title": "Policy Settings",
          "type": "json",
          "editable": true,
          "visible": true,
          "required": false,
          "tooltip": "Specify the Policy Settings for given Policy. Ex-\n{\n  \"policySettings\": {\n    \"logScrubbing\": {\n      \"state\": \"\",\n      \"scrubbingRules\": [\n        {\n          \"state\": \"\",\n          \"matchVariable\": \"\",\n          \"selectorMatchOperator\": \"\",\n          \"selector\": \"\"\n        }\n      ]\n    }\n  }\n}",
          "description": "Specify the Policy Settings for given Policy."
        }
      ],
      "output_schema": {
        "name": "",
        "id": "",
        "type": "",
        "tags": {
          "key1": "",
          "key2": ""
        },
        "location": "",
        "properties": {
          "resourceState": "",
          "provisioningState": "",
          "policySettings": {
            "state": "",
            "mode": "",
            "requestBodyEnforcement": "",
            "maxRequestBodySizeInKb": "",
            "requestBodyInspectLimitInKB": "",
            "fileUploadEnforcement": "",
            "fileUploadLimitInMb": "",
            "requestBodyCheck": "",
            "customBlockResponseStatusCode": "",
            "customBlockResponseBody": "",
            "logScrubbing": {
              "state": "",
              "scrubbingRules": [
                {
                  "state": "",
                  "matchVariable": "",
                  "selectorMatchOperator": "",
                  "selector": ""
                }
              ]
            }
          },
          "managedRules": {
            "managedRuleSets": [
              {
                "ruleSetType": "",
                "ruleSetVersion": "",
                "ruleGroupOverrides": [
                  {
                    "ruleGroupName": "",
                    "rules": [
                      {
                        "ruleId": "",
                        "state": "",
                        "action": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "exclusions": [
              {
                "matchVariable": "",
                "selectorMatchOperator": "",
                "selector": "",
                "exclusionManagedRuleSets": [
                  {
                    "ruleSetType": "",
                    "ruleSetVersion": "",
                    "ruleGroups": [
                      {
                        "ruleGroupName": "",
                        "rules": [
                          {
                            "ruleId": ""
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "customRules": [
            {
              "name": "",
              "priority": "",
              "state": "",
              "ruleType": "",
              "matchConditions": [
                {
                  "matchVariables": [
                    {
                      "variableName": "",
                      "selector": ""
                    }
                  ],
                  "operator": "",
                  "negationConditon": "",
                  "matchValues": [],
                  "transforms": []
                }
              ],
              "action": ""
            }
          ]
        }
      }
    },
    {
      "operation": "delete_policy",
      "title": "Delete Policy",
      "annotation": "delete_policy",
      "description": "Deletes the Policy by the specified Policy name.",
      "category": "investigation",
      "is_config_required": true,
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "policy_name",
          "title": "Policy Name",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the name of protection policy within a resource group which is to be deleted",
          "description": "Specify the name of protection policy within a resource group which is to be deleted"
        }
      ],
      "output_schema": {
        "name": "",
        "id": "",
        "type": "",
        "tags": {
          "key1": "",
          "key2": ""
        },
        "location": "",
        "properties": {
          "resourceState": "",
          "provisioningState": "",
          "policySettings": {
            "state": "",
            "mode": "",
            "requestBodyEnforcement": "",
            "maxRequestBodySizeInKb": "",
            "requestBodyInspectLimitInKB": "",
            "fileUploadEnforcement": "",
            "fileUploadLimitInMb": "",
            "requestBodyCheck": "",
            "customBlockResponseStatusCode": "",
            "customBlockResponseBody": "",
            "logScrubbing": {
              "state": "",
              "scrubbingRules": [
                {
                  "state": "",
                  "matchVariable": "",
                  "selectorMatchOperator": "",
                  "selector": ""
                }
              ]
            }
          },
          "managedRules": {
            "managedRuleSets": [
              {
                "ruleSetType": "",
                "ruleSetVersion": "",
                "ruleGroupOverrides": [
                  {
                    "ruleGroupName": "",
                    "rules": [
                      {
                        "ruleId": "",
                        "state": "",
                        "action": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "exclusions": [
              {
                "matchVariable": "",
                "selectorMatchOperator": "",
                "selector": "",
                "exclusionManagedRuleSets": [
                  {
                    "ruleSetType": "",
                    "ruleSetVersion": "",
                    "ruleGroups": [
                      {
                        "ruleGroupName": "",
                        "rules": [
                          {
                            "ruleId": ""
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "customRules": [
            {
              "name": "",
              "priority": "",
              "state": "",
              "ruleType": "",
              "matchConditions": [
                {
                  "matchVariables": [
                    {
                      "variableName": "",
                      "selector": ""
                    }
                  ],
                  "operator": "",
                  "negationConditon": "",
                  "matchValues": [],
                  "transforms": []
                }
              ],
              "action": ""
            }
          ]
        }
      }
    },
    {
      "operation": "get_policy",
      "title": "Get Policy",
      "annotation": "get_policy",
      "description": "Retrieve protection policy with specified name within a resource group.",
      "category": "investigation",
      "is_config_required": true,
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "policy_name",
          "title": "Policy Name",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the Name of the Policy.",
          "description": "Specify the Name of the Policy."
        }
      ],
      "output_schema": {
        "name": "",
        "id": "",
        "type": "",
        "tags": {
          "key1": "",
          "key2": ""
        },
        "location": "",
        "properties": {
          "resourceState": "",
          "provisioningState": "",
          "policySettings": {
            "state": "",
            "mode": "",
            "requestBodyEnforcement": "",
            "maxRequestBodySizeInKb": "",
            "requestBodyInspectLimitInKB": "",
            "fileUploadEnforcement": "",
            "fileUploadLimitInMb": "",
            "requestBodyCheck": "",
            "customBlockResponseStatusCode": "",
            "customBlockResponseBody": "",
            "logScrubbing": {
              "state": "",
              "scrubbingRules": [
                {
                  "state": "",
                  "matchVariable": "",
                  "selectorMatchOperator": "",
                  "selector": ""
                }
              ]
            }
          },
          "customRules": [
            {
              "name": "",
              "priority": "",
              "state": "",
              "ruleType": "",
              "matchConditions": [
                {
                  "matchVariables": [
                    {
                      "variableName": "",
                      "selector": ""
                    }
                  ],
                  "operator": "",
                  "negationConditon": "",
                  "matchValues": [],
                  "transforms": []
                }
              ],
              "action": ""
            }
          ],
          "managedRules": {
            "managedRuleSets": [
              {
                "ruleSetType": "",
                "ruleSetVersion": "",
                "ruleGroupOverrides": [
                  {
                    "ruleGroupName": "",
                    "rules": [
                      {
                        "ruleId": "",
                        "state": "",
                        "action": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "exclusions": [
              {
                "matchVariable": "",
                "selectorMatchOperator": "",
                "selector": ""
              }
            ]
          }
        }
      }
    },
    {
      "operation": "list_policies",
      "title": "List Policies",
      "annotation": "list_policies",
      "description": "Lists all of the protection policies within a resource group.",
      "category": "investigation",
      "is_config_required": true,
      "visible": true,
      "enabled": true,
      "parameters": [],
      "output_schema": {
        "value": [
          {
            "name": "",
            "id": "",
            "type": "",
            "tags": {
              "key1": "",
              "key2": ""
            },
            "location": "",
            "properties": {
              "resourceState": "",
              "provisioningState": "",
              "policySettings": {
                "state": "",
                "mode": "",
                "requestBodyEnforcement": "",
                "maxRequestBodySizeInKb": "",
                "requestBodyInspectLimitInKB": "",
                "fileUploadEnforcement": "",
                "fileUploadLimitInMb": "",
                "requestBodyCheck": "",
                "customBlockResponseStatusCode": "",
                "customBlockResponseBody": "",
                "logScrubbing": {
                  "state": "",
                  "scrubbingRules": [
                    {
                      "state": "",
                      "matchVariable": "",
                      "selectorMatchOperator": "",
                      "selector": ""
                    }
                  ]
                }
              },
              "managedRules": {
                "managedRuleSets": [
                  {
                    "ruleSetType": "",
                    "ruleSetVersion": ""
                  }
                ]
              },
              "customRules": [
                {
                  "name": "",
                  "priority": "",
                  "state": "",
                  "ruleType": "",
                  "matchConditions": [
                    {
                      "matchVariables": [
                        {
                          "variableName": "",
                          "selector": ""
                        }
                      ],
                      "operator": "",
                      "negationConditon": "",
                      "matchValues": [],
                      "transforms": []
                    }
                  ],
                  "action": ""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "operation": "list_all_policies",
      "title": "List all Policies",
      "annotation": "list_all_policies",
      "description": "Gets all the WAF policies in a subscription.",
      "category": "investigation",
      "is_config_required": true,
      "visible": true,
      "enabled": true,
      "parameters": [],
      "output_schema": {
        "value": [
          {
            "name": "",
            "id": "",
            "type": "",
            "tags": {
              "key1": "",
              "key2": ""
            },
            "location": "",
            "properties": {
              "resourceState": "",
              "provisioningState": "",
              "policySettings": {
                "state": "",
                "mode": "",
                "requestBodyEnforcement": "",
                "maxRequestBodySizeInKb": "",
                "requestBodyInspectLimitInKB": "",
                "fileUploadEnforcement": "",
                "fileUploadLimitInMb": "",
                "requestBodyCheck": "",
                "customBlockResponseStatusCode": "",
                "customBlockResponseBody": "",
                "logScrubbing": {
                  "state": "",
                  "scrubbingRules": [
                    {
                      "state": "",
                      "matchVariable": "",
                      "selectorMatchOperator": "",
                      "selector": ""
                    }
                  ]
                }
              },
              "customRules": [
                {
                  "name": "",
                  "priority": "",
                  "state": "",
                  "ruleType": "",
                  "matchConditions": [
                    {
                      "matchVariables": [
                        {
                          "variableName": "",
                          "selector": ""
                        }
                      ],
                      "operator": "",
                      "negationConditon": "",
                      "matchValues": [],
                      "transforms": []
                    }
                  ],
                  "action": ""
                }
              ],
              "managedRules": {
                "managedRuleSets": [
                  {
                    "ruleSetType": "",
                    "ruleSetVersion": ""
                  }
                ]
              }
            }
          }
        ]
      }
    }
  ]
}